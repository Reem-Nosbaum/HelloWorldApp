trigger:
- master

pool:
  name: Default
  demands:
    - agent.name -equals reem-ubuntu

variables:
  majorVersion: '1'
  minorVersion: '0'
  buildVersion: '$(Build.BuildId)'  # Automatically incremented with each build
  packageVersion: '$(majorVersion).$(minorVersion).$(buildVersion)'  # Custom versioning

steps:
# Step 1: Use the .NET SDK
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.0.108'

# Step 2: Print the Version to the Console
- script: |
    echo "Building version $(packageVersion)"
  displayName: 'Print Version to Console'

# Step 3: Restore dependencies using dotnet restore
- script: |
    dotnet restore HelloWorldApp.sln
  displayName: 'Restore Dependencies'
  env:
    VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: '{"endpointCredentials": [{"endpoint":"https://pkgs.dev.azure.com/reemnu/HelloWorldAppPipeline/_packaging/HelloWorldAppArtifacts/nuget/v3/index.json","username":"AzureDevOps","password":"$(System.AccessToken)"}]}'

# Step 4: Build the project using dotnet build
- script: |
    dotnet build --configuration Release
  displayName: 'Build Project'

# Step 5: Pack the project (create NuGet package)
- script: |
    dotnet pack --configuration Release --output $(Build.ArtifactStagingDirectory) /p:PackageVersion=$(packageVersion)
  displayName: 'Pack Project as NuGet Package'

# Step 6: Push the package to Azure Artifacts feed using dotnet
- script: |
    dotnet nuget push $(Build.ArtifactStagingDirectory)/*.nupkg --source "https://pkgs.dev.azure.com/reemnu/HelloWorldAppPipeline/_packaging/HelloWorldAppArtifacts/nuget/v3/index.json" --api-key $(System.AccessToken) --skip-duplicate
  displayName: 'Push NuGet Package to Azure Artifacts'
  env:
    VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: '{"endpointCredentials": [{"endpoint":"https://pkgs.dev.azure.com/reemnu/HelloWorldAppPipeline/_packaging/HelloWorldAppArtifacts/nuget/v3/index.json","username":"AzureDevOps","password":"$(System.AccessToken)"}]}'
